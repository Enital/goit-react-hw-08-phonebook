{"version":3,"file":"static/js/838.b865015f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/loader.module.css?1600","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Pages/RootContact/rootContact.module.css?b499","components/Pages/RootContact/rootContact.jsx","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"addButton\":\"contactForm_addButton__Yg9vK\",\"form\":\"contactForm_form__3ay0L\",\"label\":\"contactForm_label__WakW9\",\"input\":\"contactForm_input__wCtae\",\"addSpan\":\"contactForm_addSpan__c4nXB\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from 'redux/selectors';\nimport { addContact } from '../../redux/Contacts/operations';\nimport { Notify } from 'notiflix';\nimport { FaRegSave } from \"react-icons/fa\";\n\nimport css from './contactForm.module.css';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const dispatch = useDispatch();\n    const contactsList = useSelector(selectContactsList);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setName('');\n        setNumber('');\n        addContacts({ name, number });\n    };\n\n    const addContacts = ({ name, number }) => {\n        const contact = { name, number };\n        const nameToLowerCase = name.toLowerCase();\n        const contacts = contactsList.find(\n            contact =>\n                contact.name.toLowerCase() === nameToLowerCase ||\n                contact.number === number\n        );\n\n        if (contacts) {\n            Notify.failure(`${name} is already in contacts`);\n            return;\n        }\n        dispatch(addContact(contact));\n        setName('');\n        setNumber('');\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} className={css.form}>\n                <label className={css.label}>\n                    Name\n                    <input\n                        className={css.inputTitle}\n                        onChange={handleChange}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Za-яА-Я]+([' \\-][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                    />\n                </label>\n                <label className={css.formNumber}>\n                    Number\n                    <input\n                        className={css.inputTitle}\n                        onChange={handleChange}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\" number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={number}\n                    />\n                </label>\n\n                <button className={css.addButton} type=\"submit\">\n                    <FaRegSave />\n                    <span className={css.addSpan}>Add contact</span>\n                </button>\n            </form>\n            <h3>Phone book: {contactsList.length} items</h3>\n        </>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__1AOoV\"};","import { Vortex } from 'react-loader-spinner';\n\nimport css from './loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className={css.loader}>\n      <Vortex\n        visible={true}\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n      />\n    </div>\n  );\n}\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__R0BG5\",\"item\":\"contactList_item__iETfD\",\"delete\":\"contactList_delete__zx9NY\",\"contact\":\"contactList_contact__75MmD\",\"contactName\":\"contactList_contactName__4zjta\"};","import Loader from \"components/Loader/Loader\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContact, deleteContact } from \"../../redux/Contacts/operations\";\nimport { getIsLoading, getVisibleContacts } from \"../../redux/selectors\";\nimport css from './contactList.module.css'\n\nfunction ContactList() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getVisibleContacts);\n    const isLoading = useSelector(getIsLoading);\n    // console.log(contacts);\n\n    useEffect(() => {\n        dispatch(fetchContact());\n    }, [dispatch]);\n\n    const deleteContactBtn = id => {\n        dispatch(deleteContact(id));\n    }\n    \n    return (\n        <>\n            {isLoading && <Loader />}\n            <h2>Contacts</h2>\n            <ul className={css.list}>\n                {contacts.map(({ id, name, number }) => {\n                    return (<>\n                        <li key={id} className={css.item}>\n                            <div className={css.contact}>\n                                <span className={css.contactName}>{name}</span>\n                                <span>{number}</span>\n                            </div>\n                            <button className={css.delete} type='button' onClick={() => deleteContactBtn(id)}>Delete contact</button>\n                        </li>\n                    </>\n                    )\n                })}\n            </ul>\n        </>\n    )\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__sX944\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport css from './filter.module.css';\nimport { filterContact } from '../../redux/Filter/filterSlice';\n\nfunction Filter() {\n    const dispatch = useDispatch();\n    const filter = useSelector(state=> state.filter)\n\n    return (\n        <>\n            <h3>Find contacts by name</h3>\n            <label>\n                <input\n                    type=\"text\"\n                    name='filter'\n                    value={filter}\n                    onChange={e => { dispatch(filterContact(e.target.value)) }}\n                    className={css.input}\n                />\n            </label>\n        </>\n    )\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"rootContact_contacts__AzXyM\"};","import {ContactForm} from \"../../ContactForm/ContactForm\"\nimport ContactList from \"../../ContactList/ContactList\"\nimport Filter from \"../../Filter/Filter\"\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { fetchContact } from '../../../redux/Contacts/operations';\nimport { getError, getIsLoading } from 'redux/selectors';\n\nimport css from './rootContact.module.css'\n\nexport default function RootContacts() {\n    const isLoading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchContact());\n    }, [dispatch]);\n\n    return (\n        <div className={css.contacts}>\n            <ContactForm />\n            <Filter />\n            {isLoading && !error && <b>Request in progress...</b>}\n            <ContactList />\n        </div>\n    )\n}","export const selectContactsList = state => state.contacts.list;\nexport const selectFilter = ({ filter }) => filter;\n\n\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = ({ contacts: { list }, filter }) => {\n  if (!filter) {\n    return list;\n  }\n  const normalizedFilter = filter.toLowerCase();\n\n  return list.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contactsList","useSelector","selectContactsList","addContacts","contact","nameToLowerCase","toLowerCase","contacts","find","Notify","addContact","handleChange","event","currentTarget","value","onSubmit","e","preventDefault","className","css","onChange","type","pattern","title","required","length","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","getVisibleContacts","isLoading","getIsLoading","useEffect","fetchContact","map","id","onClick","deleteContact","deleteContactBtn","filter","state","filterContact","target","RootContacts","error","getError","list","normalizedFilter","includes"],"sourceRoot":""}