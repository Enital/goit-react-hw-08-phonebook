{"version":3,"file":"static/js/989.10838383.chunk.js","mappings":"gPACA,EAA2B,+BAA3B,EAAiE,2BAAjE,EAAoG,4BAApG,EAAwI,4B,SCMjI,SAASA,IACZ,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAmCjB,OACI,gBAAKC,UAAWC,EAAhB,UACI,kBAAMC,SAhBO,SAAAC,GACjBA,EAAEC,iBACFC,QAAQC,IAAIX,GAEZ,IAAMN,EAAOc,EAAEI,OAAOC,SAASnB,KAAKoB,MAC9BlB,EAAQY,EAAEI,OAAOC,SAASjB,MAAMkB,MAChChB,EAAWU,EAAEI,OAAOC,SAASf,SAASgB,MAC5CJ,QAAQC,IAAIjB,EAAKE,EAAME,GACvBK,GACIY,EAAAA,EAAAA,IAAS,CAAErB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAd5BH,EAAQ,IACRE,EAAS,IACTE,EAAY,GAef,EAIqCM,UAAWC,EAAUU,aAAa,MAAhE,WACI,kBAAOX,UAAWC,EAAlB,SAA6B,UAC7B,kBAAOD,UAAWC,EACdW,KAAK,OACLvB,KAAK,OACLwB,UAAQ,EACRJ,MAAOpB,EACPyB,SAzCS,SAAAC,GACrBzB,EAAQyB,EAAMC,cAAcP,MAC/B,KAwCW,kBAAOT,UAAWC,EAAlB,SAA6B,WAC7B,kBAAOD,UAAWC,EACdW,KAAK,OACLvB,KAAK,QACLwB,UAAQ,EACRJ,MAAOlB,EACPuB,SA5CU,SAAAC,GACtBvB,EAAUuB,EAAMC,cAAcP,MACjC,KA2CW,kBAAOT,UAAWC,EAAlB,SAA6B,cAC7B,kBAAOD,UAAWC,EACdW,KAAK,OACLvB,KAAK,WACLwB,UAAQ,EACRJ,MAAOhB,EACPqB,SA/Ca,SAAAC,GACzBrB,EAAaqB,EAAMC,cAAcP,MACpC,KA+CW,mBAAQG,KAAK,SAAb,SAAsB,iBAIrC,CC3ED,MAA2B,2BCEZ,SAASK,IACpB,OACI,iBAAKjB,UAAWC,EAAhB,WACI,eAAIiB,MAAO,CAAEC,UAAW,UAAxB,SAAoC,kBACpC,SAAChC,EAAD,MAGX,C,gICVM,IAAMU,EAAqB,SAAAuB,GAAK,OAAIA,EAAMzB,SAAS0B,IAAnB,EAI1BC,EAAe,SAAAF,GAAK,OAAIA,EAAMzB,SAAS4B,SAAnB,EACpBC,EAAW,SAAAJ,GAAK,OAAIA,EAAMzB,SAAS8B,KAAnB,EAEhBC,EAAqB,SAAC,GAAoC,IAAtBL,EAAqB,EAAjC1B,SAAY0B,KAAQM,EAAa,EAAbA,OACvD,IAAKA,EACH,OAAON,EAET,IAAMO,EAAmBD,EAAOE,cAEhC,OAAOR,EAAKM,QAAO,SAAAG,GAAO,OACxBA,EAAQzC,KAAKwC,cAAcE,SAASH,EADZ,GAG3B,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/registerForm.module.css?0fd0","components/RegisterForm/RegisterForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Pages/Register/register.module.css?3eb7","components/Pages/Register/Register.jsx","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"register\":\"registerForm_register__tOlRH\",\"form\":\"registerForm_form__8tKcV\",\"label\":\"registerForm_label__tMcox\",\"input\":\"registerForm_input__uBoqp\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from '../../redux/Auth/authOperations';\nimport {selectContactsList} from '../../redux/selectors'\n\nimport css from './registerForm.module.css';\n\nexport function RegisterForm() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const contacts = useSelector(selectContactsList);\n    const dispatch = useDispatch();\n\n\n    const handleNameChange = event => {\n        setName(event.currentTarget.value)\n    };\n\n    const handleEmailChange = event => {\n        setEmail( event.currentTarget.value );\n    };\n\n    const handlePasswordChange = event => {\n        setPassword( event.currentTarget.value );\n    };\n\n    const reset = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(contacts);\n        // const form = e.currentTarget;\n        const name = e.target.elements.name.value;\n        const email = e.target.elements.email.value\n        const password = e.target.elements.password.value;\n        console.log(name,email,password)\n        dispatch(\n            register({ name, email, password })\n        );\n        reset();\n    };\n\n    return (\n        <div className={css.register}>\n            <form onSubmit={handleSubmit} className={css.form} autoComplete=\"off\">\n                <label className={css.label}>Name</label>\n                <input className={css.input}\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                    value={name}\n                    onChange={handleNameChange} />\n                <label className={css.label}>Email</label>\n                <input className={css.input}\n                    type=\"text\"\n                    name=\"email\"\n                    required\n                    value={email}\n                    onChange={handleEmailChange} />\n                <label className={css.label}>Password</label>\n                <input className={css.input}\n                    type=\"text\"\n                    name=\"password\"\n                    required\n                    value={password}\n                    onChange={handlePasswordChange} />\n                \n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"register\":\"register_register__HncQb\"};","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nimport css from './register.module.css'\nexport default function Register() {\n    return (\n        <div className={css.register}>\n            <h1 style={{ textAlign: 'center' }}>Registration</h1>\n            <RegisterForm />\n        </div>\n    );\n}","export const selectContactsList = state => state.contacts.list;\nexport const selectFilter = ({ filter }) => filter;\n\n\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = ({ contacts: { list }, filter }) => {\n  if (!filter) {\n    return list;\n  }\n  const normalizedFilter = filter.toLowerCase();\n\n  return list.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};"],"names":["RegisterForm","useState","name","setName","email","setEmail","password","setPassword","contacts","useSelector","selectContactsList","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","console","log","target","elements","value","register","autoComplete","type","required","onChange","event","currentTarget","Register","style","textAlign","state","list","getIsLoading","isLoading","getError","error","getVisibleContacts","filter","normalizedFilter","toLowerCase","contact","includes"],"sourceRoot":""}